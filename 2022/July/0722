220722
<백준 13458>
문제: 총 N개의 시험장이 있고, 각각의 시험장마다 응시자들이 있다. i번 시험장에 있는 응시자의 수는 Ai명이다.
감독관은 총감독관과 부감독관으로 두 종류가 있다. 총감독관은 한 시험장에서 감시할 수 있는 응시자의 수가 B명이고,
부감독관은 한 시험장에서 감시할 수 있는 응시자의 수가 C명이다.
각각의 시험장에 총감독관은 오직 1명만 있어야 하고, 부감독관은 여러 명 있어도 된다.
각 시험장마다 응시생들을 모두 감시해야 한다. 이때, 필요한 감독관 수의 최솟값을 구하는 프로그램을 작성하시오.

코드:
N = int(input())   #시험장 개수
Ai = list(map(int, input().split()))   #각 시험장에 있는 응시자 수
B,C = map(int, input().split())   #총감독관,  부감독관이 감시 가능한 응시자 수
cnt=0   #필요한 감독관 수

for i in Ai:
    student = i-B
    cnt+=1
    if student > 0 :
        cnt += (i-B)//C
        if (i-B)%C != 0:
            cnt += 1
print(cnt)

<백준 6588>
문제: 1742년, 독일의 아마추어 수학가 크리스티안 골드바흐는 레온하르트 오일러에게 다음과 같은 추측을 제안하는 편지를 보냈다.
>> 4보다 큰 모든 짝수는 두 홀수 소수의 합으로 나타낼 수 있다.
예를 들어 8은 3 + 5로 나타낼 수 있고, 3과 5는 모두 홀수인 소수이다. 
또, 20 = 3 + 17 = 7 + 13, 42 = 5 + 37 = 11 + 31 = 13 + 29 = 19 + 23 이다.
이 추측은 아직도 해결되지 않은 문제이다.
백만 이하의 모든 짝수에 대해서, 이 추측을 검증하는 프로그램을 작성하시오.

코드:
arr = []
for i in range(3,10001,2): #10000000까지의 소수 구하기
    cnt=0 #1과 자기자신 외 나누어 떨어지는 수의 개수
    for j in range (3, i):
        if(i%j==0): #(1과 자기자신 외에) 나누어 떨어지는 수가 있으면
            cnt += 1
    if(cnt == 0):
        arr.append(i) #없으면 배열에 추가
print(arr)

arrTest = []
while True: #입력받기
    n = int(input())
    if(n==0):
        break
    arrTest.append(n)
    
for j in arrTest:
    for i in arr:
       if (j-i) in arr:
          print(j,"=",i,"+",(j-i))
          break
